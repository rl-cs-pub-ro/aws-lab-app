Version: "2012-10-17"
Statement:
  # Restrict all EC2 actions to a single region
  - Sid: "EnforceRegion"
    Effect: "Deny"
    Action: "ec2:*"
    Resource: "*"
    Condition: {"StringNotEquals": {"ec2:Region": "eu-west-1"}}

  # Restrict access on admin_* resources
  - Sid: "DenyAdminResources"
    Effect: "Deny"
    Action: "ec2:*"
    Resource: "*"
    Condition: {"StringLike": {"aws:ResourceTag/Name": "admin_*"}}
  - Sid: "DenyAdminResourcesEc2"
    Effect: "Deny"
    Action: "ec2:*"
    Resource: "*"
    Condition: {"StringLike": {"ec2:ResourceTag/Name": "admin_*"}}

  - Sid: "AllowEC2StudentActions"
    Effect: "Allow"
    Action: [
      # Describe actions are OK
      "ec2:Describe*",
      # Instances:
      "ec2:CreateKeyPair",
      "ec2:CreateSecurityGroup",
      "ec2:AuthorizeSecurityGroupIngress", "ec2:RevokeSecurityGroupIngress",
      "ec2:AuthorizeSecurityGroupEgress", "ec2:RevokeSecurityGroupEgress",
      "ec2:AllocateAddress", "ec2:AssociateAddress",
      # VPC with public nets:
      "ec2:CreateVpc", "ec2:CreateSubnet", "ec2:DescribeAvailabilityZones",
      "ec2:CreateRouteTable", "ec2:CreateRoute", "ec2:CreateInternetGateway",
      "ec2:ReplaceRoute", "ec2:DeleteRoute", "ec2:AttachInternetGateway",
      "ec2:AssociateRouteTable", "ec2:ModifyVpcAttribute",
      "ec2:ModifyInstanceAttribute", "ec2:CreateNatGateway",
      "ec2:CreateNetworkInterface", "ec2:AttachNetworkInterface",
      "ec2:DisassociateRouteTable", "ec2:ReplaceRouteTableAssociation",
    ]
    Resource: "*"

  - Sid: "AllowEC2UserTagged"
    Effect: "Allow"
    Action: ["ec2:*"]
    Resource: "*"
    Condition: {
      "StringLike": {"ec2:ResourceTag/Name": "${aws:username}_*"}
    }
  - Sid: "AllowEC2UserTagged2"
    Effect: "Allow"
    Action: ["ec2:*"]
    Resource: "*"
    Condition: {
      "StringLike": {"aws:ResourceTag/Name": "${aws:username}_*"}
    }

  # Allow launching instances / volumes (tags are not supported)
  - Sid: "AllowLaunchInstances"
    Effect: "Allow"
    Action: ["ec2:RunInstances", "ec2:CreateVolume"]
    Resource: '*'

  - Sid: "AllowEC2CreateUserTags"
    Effect: "Allow"
    Action: ["ec2:CreateTags", "ec2:DeleteTags"]
    Resource: "*"
    Condition: {
      "StringLike": {"aws:RequestTag/Name": "${aws:username}_*"}
    }

  - Sid: "AllowCloudWatch"
    Effect: "Allow"
    Action: "autoscaling:*"
    Resource: "*"

